// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TRPZ.Data;

namespace TRPZ.Data.Migrations
{
    [DbContext(typeof(EliteRestaurantContext))]
    [Migration("20200324054723_AddDateTimeFieldForCook")]
    partial class AddDateTimeFieldForCook
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TRPZ.Data.CookEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WhenFinishes")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cooks");
                });

            modelBuilder.Entity("TRPZ.Data.CuisineTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CookEntityId")
                        .HasColumnType("int");

                    b.Property<string>("CuisineType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CookEntityId");

                    b.ToTable("CuisineTypes");
                });

            modelBuilder.Entity("TRPZ.Data.DishEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("CookingTime")
                        .HasColumnType("time");

                    b.Property<int?>("CuisineTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CuisineTypeId");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("TRPZ.Data.IngredientEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DishEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Ingredient")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DishEntityId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("TRPZ.Data.CuisineTypeEntity", b =>
                {
                    b.HasOne("TRPZ.Data.CookEntity", null)
                        .WithMany("CuisinesSpecializedIn")
                        .HasForeignKey("CookEntityId");
                });

            modelBuilder.Entity("TRPZ.Data.DishEntity", b =>
                {
                    b.HasOne("TRPZ.Data.CuisineTypeEntity", "CuisineType")
                        .WithMany()
                        .HasForeignKey("CuisineTypeId");
                });

            modelBuilder.Entity("TRPZ.Data.IngredientEntity", b =>
                {
                    b.HasOne("TRPZ.Data.DishEntity", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("DishEntityId");
                });
#pragma warning restore 612, 618
        }
    }
}
